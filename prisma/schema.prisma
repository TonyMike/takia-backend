generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  role           Role      @default(user)
  email          String?   @unique
  password       String
  businessName   String?
  phoneNumber    String?   @unique
  whatsappLink   String?
  instagramLink  String?
  twitterLink    String?
  fullName       String
  profilePicture String?
  isGoogleAuth   Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  refreshToken   String?
  Product        Product[] @relation("userProduct")
  savedProduct   Product[] @relation("savedProduct")
}

model Product {
  id            String    @id @default(uuid())
  title         String
  slug          String   @unique
  description   String
  negotiable    Boolean
  condition     Condition @default(used) // Make sure `Condition` enum is defined
  categoryId    Int
  subCategoryId Int
  state         String
  school        String // Make this optional if it might be null
  images        String[]// Make this optional if it might be null
  viewCount     Int?      @default(0)
  price         Int       @default(0) // Consider setting a default value if applicable
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String
  User          User     @relation("userProduct", fields: [userId], references: [id])
  savedById     String?
  savedBy       User?     @relation("savedProduct", fields: [savedById], references: [id])
  category    Category    @relation(fields: [categoryId], references: [id])
  subCategory SubCategory @relation(fields: [subCategoryId], references: [id])
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  image         String
  subCategories SubCategory[]
  Product       Product[]
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String     @unique
  image      String?
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id])
  Product    Product[]

  @@unique([name, categoryId]) // Ensures subcategory names are unique within a category
}

enum Role {
  admin
  user
}

enum Condition {
  new
  used
}
